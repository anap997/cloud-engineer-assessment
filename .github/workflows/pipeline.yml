name: GitHub Actions pipeline
on:
  push:
    branches:
      - 'main'
      - 'testing-bumpversion'
  workflow_dispatch:
    inputs:
      BUMP_VERSION:
        required: false
        type: choice
        options:
          - ''
          - major
          - minor
          - patch
          - release

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      
      - name: Configure Git identity
        run: |
          git config --global user.email "you@example.com"
          git config --global user.name "Your Name"
        
      
      - name: Install bumpversion
        run: pip install bumpversion
        
      - name: Version Bump
        run: |
          if [[ "${{ inputs.BUMP_VERSION }}" == '' ]]; then
            bumpversion release
          else
            bumpversion ${{ inputs.BUMP_VERSION }}
          fi

      - name: Build and push Docker image
        run: |
          NAME=todoapp
          VERSION=$(cat ./version)
          docker build . -t $NAME:$VERSION
          docker tag $NAME:$VERSION anapetrovska/$NAME:$VERSION
          docker push anapetrovska/$NAME:$VERSION
      
      - name: Update version in Helm chart
        run: |
          VERSION=$(cat ./version)
          echo $VERSION
          sed -i "s|^version: .*|version: $VERSION|" helm/Chart.yaml
          
          cat helm/Chart.yaml         

      - name: Commit version changes
        run: |
          git branch
          git add --all
          git commit -m "Bumping version to $VERSION" || true
          git push
  
  deploy:
    runs-on: ubuntu-latest
        
    needs: build
    
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: start minikube
        id: minikube
        uses: medyagh/setup-minikube@master
      
      - name: Setup Helm
        uses: azure/setup-helm@v4.2.0
  
      - name: Install Helm Chart
        run: |
          ls
          kubectl create namespace todoapp
          helm upgrade --install todo-app -n todoapp ./helm
          kubectl get all -n todoapp
          pod_name=$(kubectl get pods -n todoapp -o=jsonpath='{.items[*].metadata.name}')
          kubectl exec $pod_name -n todoapp -- sh -c 'curl http://localhost:8080/healthz'


